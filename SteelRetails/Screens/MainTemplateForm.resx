<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>